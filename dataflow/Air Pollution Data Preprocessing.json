{
	"name": "Air Pollution Data Preprocessing",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AirPollutionData",
						"type": "DatasetReference"
					},
					"name": "StreamAirPollutionData"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AirPollution",
						"type": "DatasetReference"
					},
					"name": "toSilver"
				}
			],
			"transformations": [
				{
					"name": "CorrectedTimestampAndLocation"
				},
				{
					"name": "FilterAQIandTimestamp"
				},
				{
					"name": "ProperConversion"
				},
				{
					"name": "Transformation"
				},
				{
					"name": "FlattenColumns"
				}
			],
			"scriptLines": [
				"source(output(",
				"          coord as (lon as double, lat as double),",
				"          list as (main as (aqi as integer), components as (co as double, no as integer, no2 as double, o3 as double, so2 as double, pm2_5 as double, pm10 as double, nh3 as double), dt as integer)[]",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine') ~> StreamAirPollutionData",
				"FlattenColumns derive(corrected_timestamp = iif(length(toString({timestamp})) == 10, toInteger({timestamp}), toInteger(null())),",
				"          location = 'Boston') ~> CorrectedTimestampAndLocation",
				"CorrectedTimestampAndLocation filter(!isNull({aqi}) && !isNull(corrected_timestamp)) ~> FilterAQIandTimestamp",
				"FilterAQIandTimestamp derive(corrected_timestamp = toTimestamp(toLong(corrected_timestamp) * 1000),",
				"          id = concat('location_value', '_', toString(corrected_timestamp)),",
				"          co = round({co}, 2),",
				"          no = round({no}, 2),",
				"          no2 = round({no2},  2),",
				"          o3 = round({o3}, 2),",
				"          so2 = round({so2}, 2),",
				"          pm2_5 = round({pm2_5}, 2),",
				"          pm10 = round({pm10}, 2),",
				"          nh3 = round({nh3}, 2)) ~> ProperConversion",
				"ProperConversion select(mapColumn(",
				"          coord,",
				"          list,",
				"          lon,",
				"          lat,",
				"          aqi,",
				"          co,",
				"          no,",
				"          no2,",
				"          o3,",
				"          so2,",
				"          pm2_5,",
				"          pm10,",
				"          nh3,",
				"          corrected_timestamp,",
				"          location,",
				"          id",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Transformation",
				"StreamAirPollutionData foldDown(unroll(list),",
				"     mapColumn(",
				"          coord,",
				"          list = list.main.aqi,",
				"          lon = coord.lon,",
				"          lat = coord.lat,",
				"          aqi = list.main.aqi,",
				"          co = list.components.co,",
				"          no = list.components.no,",
				"          no2 = list.components.no2,",
				"          o3 = list.components.o3,",
				"          so2 = list.components.so2,",
				"          pm2_5 = list.components.pm2_5,",
				"          pm10 = list.components.pm10,",
				"          nh3 = list.components.nh3,",
				"          timestamp = list.dt",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> FlattenColumns",
				"Transformation sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     partitionFileNames:['Air_Pollution_Data_PreProcessing'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> toSilver"
			]
		}
	}
}